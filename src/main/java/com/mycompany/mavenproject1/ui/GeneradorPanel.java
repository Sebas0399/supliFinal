/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.mavenproject1.ui;

import com.mycompany.mavenproject1.FCGenerador;
import com.mycompany.mavenproject1.MPGenerador;
import com.mycompany.mavenproject1.PTGenerador;
import com.mycompany.mavenproject1.database.model.Cliente;
import com.mycompany.mavenproject1.database.DAO.ClienteDAO;
import com.mycompany.mavenproject1.database.DAO.ReporteDAO;
import com.mycompany.mavenproject1.utils.FileUtils;
import com.mycompany.mavenproject1.utils.HibernateUtil;
import java.awt.Color;
import java.util.Map;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author sebas
 */
public class GeneradorPanel extends javax.swing.JPanel {

    /**
     * Creates new form Panel2
     *
     * @param path
     */
    private Cliente cliente;
    ReporteDAO reporteDAO;

    public GeneradorPanel(Map<String, String> path) {
        initComponents();
        cargarClientes();
        this.setBackground(Color.LIGHT_GRAY);
        this.reporteDAO = new ReporteDAO(HibernateUtil.getSessionFactory());
        this.cliente = (Cliente) comboCliente.getSelectedItem();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        generarFacturas = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        generarProductoTerminado = new javax.swing.JToggleButton();
        generarMediosDeProduccion = new javax.swing.JToggleButton();
        jLabel3 = new javax.swing.JLabel();
        comboCliente = new javax.swing.JComboBox<>();

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Generar Facturas");

        generarFacturas.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        generarFacturas.setText("Generar");
        generarFacturas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarFacturasActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Generar Producto Terminado");

        generarProductoTerminado.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        generarProductoTerminado.setText("Generar");
        generarProductoTerminado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarProductoTerminadoActionPerformed(evt);
            }
        });

        generarMediosDeProduccion.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        generarMediosDeProduccion.setText("Generar");
        generarMediosDeProduccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarMediosDeProduccionActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Generar Material de Producci√≥n");

        comboCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(generarProductoTerminado)
                            .addComponent(generarFacturas)
                            .addComponent(generarMediosDeProduccion))))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(comboCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(generarFacturas)
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(generarProductoTerminado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(generarMediosDeProduccion)
                .addGap(37, 37, 37))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void generarFacturasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarFacturasActionPerformed
        // TODO add your handling code here:
       
            if (reporteDAO.read() == null) {
                JOptionPane.showMessageDialog(null, "Ingrese el reporte de produccion");
            } else {
                Runnable mRunnable = () -> {
                    Cargando c = new Cargando("Generando");
                    c.setVisible(true);
                    FCGenerador generator = new FCGenerador(cliente);
                    generator.cargarFacturas();
                    c.dispose();

                };
                Thread miHilo = new Thread(mRunnable);
                miHilo.start();
            }
        


    }//GEN-LAST:event_generarFacturasActionPerformed

    private void generarProductoTerminadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarProductoTerminadoActionPerformed
        // TODO add your handling code here:
        if (reporteDAO.read() == null) {
            JOptionPane.showMessageDialog(null, "Ingrese el reporte de produccion");

        } else {
            Runnable mRunnable = () -> {
                Cargando c = new Cargando("Generando");
                c.setVisible(true);
                PTGenerador generator = new PTGenerador();
                generator.cargarFacturas();
                c.dispose();

            };
            Thread miHilo = new Thread(mRunnable);
            miHilo.start();

        }
    }//GEN-LAST:event_generarProductoTerminadoActionPerformed
    private void cargarClientes() {
        ClienteDAO clienteDAO = new ClienteDAO();
        var clientes = clienteDAO.readAll();
        clientes.stream().forEach(x -> this.comboCliente.addItem(x));

    }
    private void generarMediosDeProduccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarMediosDeProduccionActionPerformed
        // TODO add your handling code here:
        if (reporteDAO.read() == null) {
            JOptionPane.showMessageDialog(null, "Ingrese el reporte de produccion");

        } else {
            Runnable mRunnable = () -> {
                Cargando c = new Cargando("Generando");
                c.setVisible(true);
                MPGenerador generator = new MPGenerador(cliente);
                generator.cargarFacturas();
                c.dispose();

            };
            Thread miHilo = new Thread(mRunnable);
            miHilo.start();
        }
    }//GEN-LAST:event_generarMediosDeProduccionActionPerformed

    private void comboClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboClienteActionPerformed
        // TODO add your handling code here:
        cliente = (Cliente) comboCliente.getSelectedItem();

    }//GEN-LAST:event_comboClienteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Cliente> comboCliente;
    private javax.swing.JToggleButton generarFacturas;
    private javax.swing.JToggleButton generarMediosDeProduccion;
    private javax.swing.JToggleButton generarProductoTerminado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
